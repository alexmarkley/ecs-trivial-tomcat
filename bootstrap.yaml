Description: >
  Example Cloudformation template to create a build and deploy process for the example application.

Parameters:
  ECSStackName:
    Description: The name of the ecs-trivial-cluster Cloudformation stack.
    Type: String

  ExampleAppName:
    Description: What is the name of this app (affects ECR and deployed Cloudformation Stack Name).
    Type: String
    Default: ecs-trivial-tomcat
  
  ExampleAppGitRepository:
    Description: Git repository where the application lives.
    Type: String
    Default: https://github.com/alexmarkley/ecs-trivial-tomcat.git

  ExampleAppInsidePort:
    Description: "What TCP port is the container listening on? (The load balancer will route requests to this port, regardless of the end user's connection port.)"
    Type: Number
    Default: 8080

  ExampleAppLoadBalancerPriority:
    Description: What priority should we use when inserting our ListenerRule into the Application Load Balancer?
    Type: Number
    Default: 100

Resources:
  ##############################################
  ###### ECR Repository for Docker Images ######
  ##############################################
  ExampleAppRepository:
    Type: AWS::ECR::Repository
  
  #########################################################################
  ###### CodeBuild Job to Automatically Build and Deploy App Updates ######
  #########################################################################
  ExampleAppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: !Sub "Automatically build and deploy the example app."
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: DOCKER_BUILD_IMAGE
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ExampleAppRepository}"
            Type: PLAINTEXT
          - Name: ECSSTACK
            Value: !Ref ECSStackName
            Type: PLAINTEXT
          - Name: APP_NAME
            Value: !Ref ExampleAppName
            Type: PLAINTEXT
          - Name: APP_PORT
            Value: !Ref ExampleAppInsidePort
            Type: PLAINTEXT
          - Name: APP_LB_PRIORITY
            Value: !Ref ExampleAppLoadBalancerPriority
            Type: PLAINTEXT
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref ExampleAppCodeBuildServiceRole
      Source:
        Type: GITHUB
        Location: !Ref ExampleAppGitRepository
        ReportBuildStatus: true
        GitCloneDepth: 0
      Triggers:
        FilterGroups:
          [
            [
              { Type: "EVENT", Pattern: "PUSH", ExcludeMatchedPattern: false },
              {
                Type: "HEAD_REF",
                Pattern: "^refs/heads/master$",
                ExcludeMatchedPattern: false,
              },
            ],
          ]
        Webhook: true

  ####################################################
  ###### IAM Role for CodeBuild Job Permissions ######
  ####################################################
  ExampleAppCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: !Sub codebuild-content-servicerole-${AWS::StackName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - "*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
              - Effect: Allow
                Action:
                  - ec2:DescribeSecurityGroup*
                  - ec2:AuthorizeSecurityGroup*
                  - ec2:CreateSecurityGroup
                  - ec2:DeleteSecurityGroup
                  - ec2:RevokeSecurityGroup*
                  - ec2:UpdateSecurityGroup*
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - ec2:DescribeTags
                Resource:
                  - "*"
